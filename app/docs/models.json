[
    {
      "title": "ChatGPT",
      "install": "pip install openai or npm install openai",
      "pythonCode": "import openai\n\n# Replace with your OpenAI API key\napi_key = \"your-api-key\"\n\ndef get_ai_response(prompt):\n    try:\n        response = openai.ChatCompletion.create(\n            model=\"gpt-3.5-turbo\",\n            messages=[{\"role\": \"user\", \"content\": prompt}],\n            api_key=api_key  # Pass the API key directly\n        )\n        return response[\"choices\"][0][\"message\"][\"content\"]\n    except Exception as e:\n        return f\"Error: {str(e)}\"\n\n# Example usage\nuser_input = input(\"Enter your prompt: \")\nai_response = get_ai_response(user_input)\nprint(\"AI Response:\", ai_response)",
      "nodejsCode": "const { OpenAI } = require(\"openai\");\n\n// Replace with your OpenAI API key\nconst openai = new OpenAI({\n    apiKey: \"your-api-key\",  // Ensure you keep this secret\n});\n\nasync function getAIResponse(prompt) {\n    try {\n        const response = await openai.chat.completions.create({\n            model: \"gpt-3.5-turbo\",\n            messages: [{ role: \"user\", content: prompt }],\n        });\n\n        console.log(\"AI Response:\", response.choices[0].message.content);\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n}\n\nconst userInput = \"Hello, how can AI help me today?\";\ngetAIResponse(userInput);",
      "apiKeyUrl": "https://platform.openai.com/docs/guides/authentication"
    },
    {
      "title": "Gemini",
      "install": "pip install google-generativeai \n npm install @google/generative-ai",
      "pythonCode": "import google.generativeai as genai\n\n# Replace with your API key\ngenai.configure(api_key=\"your-api-key\")\n\ndef get_gemini_response(prompt):\n    try:\n        model = genai.GenerativeModel(\"gemini-pro\")\n        response = model.generate_content(prompt)\n        return response.text\n    except Exception as e:\n        return f\"Error: {str(e)}\"\n\n# Example usage\nuser_input = input(\"Enter your prompt: \")\nai_response = get_gemini_response(user_input)\nprint(\"AI Response:\", ai_response)",
      "nodejsCode": "const { GoogleGenerativeAI } = require(\"@google/generative-ai\");\n\n// Replace with your API key\nconst genAI = new GoogleGenerativeAI(\"your-api-key\");\n\nasync function getGeminiResponse(prompt) {\n    try {\n        const model = genAI.getGenerativeModel({ model: \"gemini-pro\" });\n        const result = await model.generateContent(prompt);\n        console.log(\"AI Response:\", result.response.text);\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n}\n\nconst userInput = \"Hello, how can AI help me today?\";\ngetGeminiResponse(userInput);",
      "apiKeyUrl": "https://console.cloud.google.com/apis/credentials"
    }
  ]
  